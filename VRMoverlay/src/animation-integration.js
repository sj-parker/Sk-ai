/**
 * –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –∞–Ω–∏–º–∞—Ü–∏–π
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –∑–∞–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ä—É—é —Å–∏—Å—Ç–µ–º—É –Ω–∞ –Ω–æ–≤—É—é
 */

import { AnimationPrioritySystem, BlendShapeManager, AnimationStateMachine } from './animation-system.js';

class AnimationIntegration {
    constructor(vrmApp) {
        this.vrmApp = vrmApp;
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã
        this.animationSystem = new AnimationPrioritySystem(vrmApp);
        this.blendShapeManager = new BlendShapeManager(vrmApp);
        this.stateMachine = new AnimationStateMachine(vrmApp);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –Ω–æ–≤—ã–µ —Å–∏—Å—Ç–µ–º—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
        vrmApp.animationSystem = this.animationSystem;
        vrmApp.blendShapeManager = this.blendShapeManager;
        vrmApp.stateMachine = this.stateMachine;
        
        console.log('üîó AnimationIntegration –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    }
    
    /**
     * –ú–∏–≥—Ä–∏—Ä—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –≤ –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É
     */
    migrateExistingAnimations() {
        console.log('üîÑ –ú–∏–≥—Ä–∞—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∞–Ω–∏–º–∞—Ü–∏–π...');
        
        // –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏
        Object.entries(this.vrmApp.movementAnimations).forEach(([name, clip]) => {
            this.animationSystem.registerAnimation(name, clip);
        });
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –±–∞–∑–æ–≤—É—é –∞–Ω–∏–º–∞—Ü–∏—é
        this.animationSystem.playAnimation('idle');
        
        console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
    }
    
    /**
     * –ó–∞–º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ä—É—é —Ñ—É–Ω–∫—Ü–∏—é playMovement
     */
    playMovement(movementName) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤
        return this.animationSystem.playAnimation(movementName);
    }
    
    /**
     * –ó–∞–º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ä—É—é —Ñ—É–Ω–∫—Ü–∏—é applyEmotion
     */
    applyEmotion(emotionName) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É blend shapes
        return this.blendShapeManager.applyEmotion(emotionName);
    }
    
    /**
     * –ó–∞–º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ä—É—é —Ñ—É–Ω–∫—Ü–∏—é setLipsync
     */
    setLipsync(values) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É blend shapes —Å –≤—ã—Å–æ–∫–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
        return this.blendShapeManager.applyLipsync(values, 10);
    }
    
    /**
     * –û–±–Ω–æ–≤–ª—è–µ—Ç –≤—Å–µ —Å–∏—Å—Ç–µ–º—ã (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤ animate loop)
     */
    update(deltaTime) {
        this.animationSystem.update(deltaTime);
        this.blendShapeManager.update();
    }
}

/**
 * –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã
 */

// –ü—Ä–∏–º–µ—Ä 1: –ù–∞–ª–æ–∂–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–π
function exampleOverlappingAnimations() {
    const app = window.app;
    
    // –ë–∞–∑–æ–≤–∞—è –∞–Ω–∏–º–∞—Ü–∏—è (idle) + –∂–µ—Å—Ç—ã
    app.animationSystem.playAnimation('idle', app.animationSystem.layers.BASE);
    app.animationSystem.playAnimation('greeting', app.animationSystem.layers.GESTURE);
    
    // –†–µ–∑—É–ª—å—Ç–∞—Ç: idle –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è, greeting –Ω–∞–∫–ª–∞–¥—ã–≤–∞–µ—Ç—Å—è –ø–æ–≤–µ—Ä—Ö
}

// –ü—Ä–∏–º–µ—Ä 2: –≠–º–æ—Ü–∏–∏ —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞–º–∏
function exampleEmotionPriorities() {
    const app = window.app;
    
    // –ë–∞–∑–æ–≤–∞—è —ç–º–æ—Ü–∏—è
    app.blendShapeManager.applyEmotion('happy', 0.5, 5);
    
    // –í—Ä–µ–º–µ–Ω–Ω–∞—è —ç–º–æ—Ü–∏—è —Å –≤—ã—Å–æ–∫–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
    app.blendShapeManager.applyEmotion('surprised', 0.8, 8);
    
    // –ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –±–∞–∑–æ–≤–æ–π —ç–º–æ—Ü–∏–∏
    setTimeout(() => {
        app.blendShapeManager.applyEmotion('happy', 0.5, 5);
    }, 2000);
}

// –ü—Ä–∏–º–µ—Ä 3: –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏
function exampleStateManagement() {
    const app = window.app;
    
    // –ü–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏
    app.stateMachine.transitionTo(app.stateMachine.states.TALKING);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã
    const allowed = app.stateMachine.getAllowedTransitions();
    console.log('–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã:', allowed);
    
    // –í–æ–∑–≤—Ä–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
    setTimeout(() => {
        app.stateMachine.revertToPrevious();
    }, 5000);
}

// –ü—Ä–∏–º–µ—Ä 4: –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è
function exampleComplexAnimation() {
    const app = window.app;
    
    // 1. –ë–∞–∑–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    app.stateMachine.transitionTo(app.stateMachine.states.TALKING);
    
    // 2. –≠–º–æ—Ü–∏—è
    app.blendShapeManager.applyEmotion('excited', 0.7, 6);
    
    // 3. –ñ–µ—Å—Ç –ø–æ–≤–µ—Ä—Ö —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
    app.animationSystem.playAnimation('greeting', app.animationSystem.layers.GESTURE);
    
    // 4. –õ–∏–ø—Å–∏–Ω–∫ —Å –≤—ã—Å–æ–∫–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º
    app.blendShapeManager.applyLipsync({
        'Fcl_MTH_A': 0.8,
        'Fcl_MTH_I': 0.2,
        'Fcl_MTH_U': 0.1
    }, 10);
    
    // –†–µ–∑—É–ª—å—Ç–∞—Ç: talking + excited + greeting + lipsync –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
}

/**
 * –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å WebSocket
 */

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∞—Ç—É—Å–∞ —Å –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
function handleStatusWithNewSystem(message) {
    const app = window.app;
    
    switch (message.status) {
        case 'idle':
            app.stateMachine.transitionTo(app.stateMachine.states.IDLE);
            break;
        case 'talking':
            app.stateMachine.transitionTo(app.stateMachine.states.TALKING);
            break;
        case 'thinking':
            app.stateMachine.transitionTo(app.stateMachine.states.THINKING);
            break;
        case 'listening':
            app.stateMachine.transitionTo(app.stateMachine.states.LISTENING);
            break;
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —ç–º–æ—Ü–∏–π —Å –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
function handleEmotionWithNewSystem(message) {
    const app = window.app;
    
    const emotion = message.emotion || 'neutral';
    const intensity = message.intensity || 1.0;
    const priority = message.priority || 5;
    
    app.blendShapeManager.applyEmotion(emotion, intensity, priority);
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ª–∏–ø—Å–∏–Ω–∫–∞ —Å –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π
function handleLipsyncWithNewSystem(message) {
    const app = window.app;
    
    const values = {
        'Fcl_MTH_A': message.A || 0,
        'Fcl_MTH_I': message.I || 0,
        'Fcl_MTH_U': message.U || 0,
        'Fcl_MTH_E': message.E || 0,
        'Fcl_MTH_O': message.O || 0
    };
    
    app.blendShapeManager.applyLipsync(values, 10);
}

/**
 * –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
 */

// –ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏
function showActiveAnimations() {
    const app = window.app;
    const active = app.animationSystem.getActiveAnimations();
    console.log('üé≠ –ê–∫—Ç–∏–≤–Ω—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏:', active);
}

// –ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ blend shapes
function showActiveBlendShapes() {
    const app = window.app;
    const active = app.blendShapeManager.getActiveBlendShapes();
    console.log('üé≠ –ê–∫—Ç–∏–≤–Ω—ã–µ blend shapes:', active);
}

// –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
function showCurrentState() {
    const app = window.app;
    const state = app.stateMachine.getCurrentState();
    const allowed = app.stateMachine.getAllowedTransitions();
    console.log('üé≠ –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:', state);
    console.log('üé≠ –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã:', allowed);
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª–∏
window.AnimationExamples = {
    overlappingAnimations: exampleOverlappingAnimations,
    emotionPriorities: exampleEmotionPriorities,
    stateManagement: exampleStateManagement,
    complexAnimation: exampleComplexAnimation,
    showActiveAnimations,
    showActiveBlendShapes,
    showCurrentState
};

window.AnimationIntegration = AnimationIntegration; 