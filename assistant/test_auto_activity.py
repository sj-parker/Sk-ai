#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
"""

import asyncio
import time
from auto_activity import AutoActivityManager, force_activate_auto_activity
from config import is_auto_activity_enabled, get_inactivity_timeout, get_activity_check_interval

def test_auto_activity_config():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
    print("=== –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ ===")
    print(f"–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤–∫–ª—é—á–µ–Ω–∞: {is_auto_activity_enabled()}")
    print(f"–¢–∞–π–º–∞—É—Ç –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {get_inactivity_timeout()} —Å–µ–∫—É–Ω–¥")
    print(f"–ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: {get_activity_check_interval()} —Å–µ–∫—É–Ω–¥")
    print()

def test_activity_manager():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
    print("=== –¢–µ—Å—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ ===")
    
    manager = AutoActivityManager()
    
    # –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏
    old_time = manager.last_message_time
    time.sleep(1)
    manager.update_last_message_time()
    new_time = manager.last_message_time
    
    print(f"–í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {old_time != new_time}")
    
    # –¢–µ—Å—Ç –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    activity_type = manager.choose_activity_type()
    print(f"–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∏–ø –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {activity_type}")
    
    # –¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–º–ø—Ç–∞
    context = "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å1: –ü—Ä–∏–≤–µ—Ç!\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å2: –ö–∞–∫ –¥–µ–ª–∞?"
    prompt = manager.generate_activity_prompt(activity_type, context)
    print(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ–º–ø—Ç (–ø–µ—Ä–≤—ã–µ 100 —Å–∏–º–≤–æ–ª–æ–≤): {prompt[:100]}...")
    print()

async def test_force_activation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –∞–∫—Ç–∏–≤–∞—Ü–∏—é"""
    print("=== –¢–µ—Å—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ ===")
    
    if not is_auto_activity_enabled():
        print("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        return
    
    print("–ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –∞–∫—Ç–∏–≤–∞—Ü–∏—é...")
    force_activate_auto_activity()
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    await asyncio.sleep(5)
    print("–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    print()

async def test_auto_activity_lifecycle():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π –∂–∏–∑–Ω–µ–Ω–Ω—ã–π —Ü–∏–∫–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
    print("=== –¢–µ—Å—Ç –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ ===")
    
    if not is_auto_activity_enabled():
        print("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        return
    
    manager = AutoActivityManager()
    
    print("–ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å...")
    manager.start()
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ
    await asyncio.sleep(10)
    
    print("–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å...")
    manager.stop()
    
    print("–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω")
    print()

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞")
    print("=" * 60)
    
    # –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    test_auto_activity_config()
    
    # –¢–µ—Å—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    test_activity_manager()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
    async def run_async_tests():
        await test_force_activation()
        await test_auto_activity_lifecycle()
    
    try:
        asyncio.run(run_async_tests())
    except KeyboardInterrupt:
        print("\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
    
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    main() 