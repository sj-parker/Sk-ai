#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–π –ø–∞–º—è—Ç–∏
"""

from memory.manager import MemoryManager
from config import get_long_term_config

def test_memory_system():
    print("üß† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–π –ø–∞–º—è—Ç–∏")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –ø–∞–º—è—Ç–∏
    memory = MemoryManager()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    config = get_long_term_config()
    print(f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞–º—è—Ç–∏:")
    print(f"- –ú–∞–∫—Å–∏–º—É–º —Å–ª–æ–≤: {config.get('MAX_WORDS', 300)}")
    print(f"- –ú–∞–∫—Å–∏–º—É–º —Å–ª–æ–≤ –≤ –∑–∞–ø–∏—Å–∏: {config.get('MAX_WORDS_PER_ENTRY', 4)}")
    print(f"- –ê–≤—Ç–æ–ø–æ–¥–º–µ—à–∏–≤–∞–Ω–∏–µ: {config.get('AUTO_INCLUDE', True)}")
    print(f"- –§—Ä–∞–∑—ã –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {config.get('SAVE_PHRASES', [])}")
    print(f"- –§—Ä–∞–∑—ã –¥–ª—è –ø–æ–∏—Å–∫–∞: {config.get('RECALL_PHRASES', [])}")
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    print("üìù –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π:")
    
    # –ö–æ—Ä–æ—Ç–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è (–Ω–µ –±–æ–ª–µ–µ 4 —Å–ª–æ–≤)
    test_messages = [
        "–∑–∞–ø–æ–º–Ω–∏ –Ω–µ –ª—é–±–ª—é –ª–µ—Ç–æ",
        "–∑–∞–ø–æ–º–Ω–∏ –æ—á–µ–Ω—å –ª—é–±–ª—é –º–∞–º—É", 
        "–∑–∞–ø–æ–º–Ω–∏ –±–æ—é—Å—å –ø–∞—É–∫–æ–≤",
        "–∑–∞–ø–æ–º–Ω–∏ –ª—é–±–ª—é –ø–∏—Ü—Ü—É",
        "–∑–∞–ø–æ–º–Ω–∏ —Ä–∞–±–æ—Ç–∞—é –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–æ–º"
    ]
    
    for msg in test_messages:
        memory.add("user", msg)
        print(f"  ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ: '{msg}'")
    
    # –î–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ)
    long_msg = "–∑–∞–ø–æ–º–Ω–∏ –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç —Å–ª–æ–≤ –≤ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å–∏"
    memory.add("user", long_msg)
    print(f"  ‚ùå –î–ª–∏–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: '{long_msg}'")
    
    # –°–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ (–Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å—Å—è)
    normal_msg = "–ø—Ä–∏–≤–µ—Ç –∫–∞–∫ –¥–µ–ª–∞"
    memory.add("user", normal_msg)
    print(f"  üìù –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: '{normal_msg}'")
    
    print()
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—É—é –ø–∞–º—è—Ç—å
    print("üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—É—é –ø–∞–º—è—Ç—å:")
    memory.save_long_term()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    stats = memory.get_memory_stats()
    print(f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–∞–º—è—Ç–∏:")
    print(f"- –ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–∞—è: {stats['short_term_count']} —Å–æ–æ–±—â–µ–Ω–∏–π")
    print(f"- –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è: {stats['long_term_count']} –∑–∞–ø–∏—Å–µ–π ({stats['long_term_words']} —Å–ª–æ–≤)")
    print(f"- Persistent: {stats['persistent_count']} –∑–∞–ø–∏—Å–µ–π")
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –ø–∞–º—è—Ç–∏
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã –ø–∞–º—è—Ç–∏:")
    
    recall_commands = [
        "—á—Ç–æ —Ç—ã –ø–æ–º–Ω–∏—à—å",
        "–≤—Å–ø–æ–º–Ω–∏",
        "–ø–æ–º–Ω–∏—à—å"
    ]
    
    for cmd in recall_commands:
        response = memory.handle_memory_commands(cmd)
        if response:
            print(f"  ‚úÖ '{cmd}' -> {response[:50]}...")
        else:
            print(f"  ‚ùå '{cmd}' -> –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞")
    
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
    print("üß© –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç —Å –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–π –ø–∞–º—è—Ç—å—é:")
    context = memory.get_context_as_system_prompt()
    print(f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context['content'][:100]}...")
    
    print()
    print("‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    test_memory_system() 