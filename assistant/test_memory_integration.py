#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ LLM –Ω–µ —É–ø–æ–º–∏–Ω–∞–µ—Ç –ø–∞–º—è—Ç—å –±–µ–∑ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
"""

import asyncio
from memory.manager import MemoryManager
from memory.user_context import save_user_memory
from config import is_long_term_natural_integration

async def test_natural_memory_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é –ø–∞–º—è—Ç–∏"""
    
    print("üß† –¢–µ—Å—Ç –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ø–∞–º—è—Ç–∏")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –ø–∞–º—è—Ç–∏
    memory = MemoryManager()
    user_id = "test_user"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    natural_integration = is_long_term_natural_integration()
    print(f"üìã –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è: {'–í–ö–õ' if natural_integration else '–í–´–ö–õ'}")
    
    # –¢–µ—Å—Ç 1: –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–∫—Ç—ã –≤ –ø–∞–º—è—Ç—å
    print("\n1. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–∫—Ç–æ–≤ –≤ –ø–∞–º—è—Ç—å:")
    facts = [
        "–∑–∞–ø–æ–º–Ω–∏ –ª—é–±–ª—é –ø–∏—Ü—Ü—É",
        "–∑–∞–ø–æ–º–Ω–∏ –±–æ—é—Å—å –ø–∞—É–∫–æ–≤", 
        "–∑–∞–ø–æ–º–Ω–∏ –∂–∏–≤—É –≤ –ú–æ—Å–∫–≤–µ"
    ]
    
    for fact in facts:
        print(f"   –î–æ–±–∞–≤–ª—è–µ–º: {fact}")
        memory.add("user", fact)
    
    memory.save_long_term()
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    print("\n2. –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è LLM:")
    context = memory.get_context_as_system_prompt()
    print(f"   –ö–æ–Ω—Ç–µ–∫—Å—Ç: {context['content']}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—É "—á—Ç–æ —Ç—ã –ø–æ–º–Ω–∏—à—å"
    print("\n3. –ö–æ–º–∞–Ω–¥–∞ '—á—Ç–æ —Ç—ã –ø–æ–º–Ω–∏—à—å':")
    response = memory.handle_memory_commands("—á—Ç–æ —Ç—ã –ø–æ–º–Ω–∏—à—å")
    print(f"   –û—Ç–≤–µ—Ç: {response}")
    
    # –¢–µ—Å—Ç 4: –°–∏–º—É–ª—è—Ü–∏—è –¥–∏–∞–ª–æ–≥–∞ —Å LLM
    print("\n4. –°–∏–º—É–ª—è—Ü–∏—è –¥–∏–∞–ª–æ–≥–∞:")
    print("   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: —á—Ç–æ –º–Ω–µ –∑–∞–∫–∞–∑–∞—Ç—å –Ω–∞ —É–∂–∏–Ω?")
    print(f"   –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è LLM: {context['content']}")
    print("   –û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: LLM –∑–Ω–∞–µ—Ç –æ –ª—é–±–≤–∏ –∫ –ø–∏—Ü—Ü–µ, –Ω–æ –Ω–µ —É–ø–æ–º–∏–Ω–∞–µ—Ç '–ø–∞–º—è—Ç—å'")
    
    # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print("\n5. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–∞–º—è—Ç–∏:")
    stats = memory.get_memory_stats()
    print(f"   - –ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–∞—è: {stats['short_term_count']} —Å–æ–æ–±—â–µ–Ω–∏–π")
    print(f"   - –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è: {stats['long_term_count']} –∑–∞–ø–∏—Å–µ–π ({stats['long_term_words']} —Å–ª–æ–≤)")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–∞–º—è—Ç—å
    save_user_memory(user_id)
    
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print("\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    if natural_integration:
        print("   ‚úÖ –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞")
        print("   ‚úÖ LLM –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∞–∫—Ç—ã –±–µ–∑ —è–≤–Ω—ã—Ö —É–ø–æ–º–∏–Ω–∞–Ω–∏–π '–ø–∞–º—è—Ç–∏'")
    else:
        print("   ‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–± —Å —è–≤–Ω—ã–º–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏")
    
    print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("   - –ï—Å–ª–∏ LLM –≤—Å–µ –µ—â–µ —É–ø–æ–º–∏–Ω–∞–µ—Ç '–ø–∞–º—è—Ç—å' - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É NATURAL_INTEGRATION")
    print("   - –ú–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å AUTO_INCLUDE –µ—Å–ª–∏ –ø–∞–º—è—Ç—å –º–µ—à–∞–µ—Ç")
    print("   - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã '—á—Ç–æ —Ç—ã –ø–æ–º–Ω–∏—à—å' –¥–ª—è —è–≤–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞")

if __name__ == "__main__":
    asyncio.run(test_natural_memory_integration()) 