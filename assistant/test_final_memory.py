#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–π –ø–∞–º—è—Ç–∏
"""

import asyncio
from memory.user_context import get_user_context, save_user_memory
from audio_output import chat_stream_ollama

async def test_final_memory_system():
    print("üß† –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–æ–π –ø–∞–º—è—Ç–∏")
    print("=" * 50)
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Twitch
    user_id = "final_test_user"
    source = "twitch"
    
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_id} ({source})")
    print()
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    memory, role_manager = get_user_context(user_id, source)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–∫—Ç—ã –≤ –ø–∞–º—è—Ç—å
    print("üìù –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–∫—Ç—ã –≤ –ø–∞–º—è—Ç—å:")
    facts = [
        "–∑–∞–ø–æ–º–Ω–∏ –Ω–µ –ª—é–±–ª—é –ª–µ—Ç–æ",
        "–∑–∞–ø–æ–º–Ω–∏ –æ—á–µ–Ω—å –ª—é–±–ª—é –º–∞–º—É",
        "–∑–∞–ø–æ–º–Ω–∏ –±–æ—é—Å—å –ø–∞—É–∫–æ–≤"
    ]
    
    for fact in facts:
        memory.add("user", fact)
        print(f"  ‚úÖ {fact}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—É—é –ø–∞–º—è—Ç—å
    memory.save_long_term()
    save_user_memory(user_id)
    
    print("\nüí¨ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç—É:")
    
    # –¢–µ—Å—Ç 1: –û–±—ã—á–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ
    print("\n1. –û–±—ã—á–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ:")
    message1 = "–ø—Ä–∏–≤–µ—Ç —Å–∫–∞–π, –∫–∞–∫ –¥–µ–ª–∞?"
    print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message1}")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —á–µ—Ä–µ–∑ chat_stream_ollama
    memory.add("user", message1)
    context = memory.get_context_as_system_prompt()
    print(f"   –ö–æ–Ω—Ç–µ–∫—Å—Ç —Å –ø–∞–º—è—Ç—å—é: {context['content'][:100]}...")
    
    # –¢–µ—Å—Ç 2: –ö–æ–º–∞–Ω–¥–∞ –ø–∞–º—è—Ç–∏
    print("\n2. –ö–æ–º–∞–Ω–¥–∞ –ø–∞–º—è—Ç–∏:")
    message2 = "—á—Ç–æ —Ç—ã –ø–æ–º–Ω–∏—à—å –æ–±–æ –º–Ω–µ?"
    print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message2}")
    
    memory.add("user", message2)
    memory_response = memory.handle_memory_commands(message2)
    if memory_response:
        print(f"   –û—Ç–≤–µ—Ç: {memory_response}")
    
    # –¢–µ—Å—Ç 3: –ù–æ–≤—ã–π —Ñ–∞–∫—Ç
    print("\n3. –ù–æ–≤—ã–π —Ñ–∞–∫—Ç:")
    message3 = "–∑–∞–ø–æ–º–Ω–∏ –ª—é–±–ª—é –ø–∏—Ü—Ü—É"
    print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message3}")
    
    memory.add("user", message3)
    memory.save_long_term()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    context = memory.get_context_as_system_prompt()
    print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç: {context['content'][:100]}...")
    
    # –¢–µ—Å—Ç 4: –û–±—Ä–∞—â–µ–Ω–∏–µ —Å —É—á–µ—Ç–æ–º –ø–∞–º—è—Ç–∏
    print("\n4. –û–±—Ä–∞—â–µ–Ω–∏–µ —Å —É—á–µ—Ç–æ–º –ø–∞–º—è—Ç–∏:")
    message4 = "—á—Ç–æ –º–Ω–µ –∑–∞–∫–∞–∑–∞—Ç—å –Ω–∞ —É–∂–∏–Ω?"
    print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {message4}")
    
    memory.add("user", message4)
    context = memory.get_context_as_system_prompt()
    print(f"   –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è LLM: {context['content'][:100]}...")
    print("   (LLM –±—É–¥–µ—Ç –∑–Ω–∞—Ç—å, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ª—é–±–∏—Ç –ø–∏—Ü—Ü—É –∏ –º–æ–∂–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –µ—ë)")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    save_user_memory(user_id)
    
    print("\n‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
    print("\nüìä –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    stats = memory.get_memory_stats()
    print(f"- –ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–∞—è: {stats['short_term_count']} —Å–æ–æ–±—â–µ–Ω–∏–π")
    print(f"- –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è: {stats['long_term_count']} –∑–∞–ø–∏—Å–µ–π ({stats['long_term_words']} —Å–ª–æ–≤)")
    
    print("\nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
    print("–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è –ø–∞–º—è—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ–¥–º–µ—à–∏–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏!")
    print("LLM –≤—Å–µ–≥–¥–∞ –∑–Ω–∞–µ—Ç —Ñ–∞–∫—Ç—ã –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –º–æ–∂–µ—Ç –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ –æ—Ç–≤–µ—Ç–∞—Ö.")

if __name__ == "__main__":
    asyncio.run(test_final_memory_system()) 