#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ VRM —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º
"""

import asyncio
import json
import websockets
import time
from overlay_server import send_emotion_to_vrm, send_animation_to_vrm

async def test_vrm_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å VRM —á–µ—Ä–µ–∑ WebSocket"""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    ws_host = '192.168.1.4'  # –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à IP
    ws_port = 31992
    
    try:
        print(f"üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WebSocket: ws://{ws_host}:{ws_port}")
        
        async with websockets.connect(f"ws://{ws_host}:{ws_port}") as websocket:
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä VRM –∫–ª–∏–µ–Ω—Ç–∞
            await websocket.send(json.dumps({
                'type': 'vrm_client',
                'client': 'test_vrm',
                'version': '1.0'
            }))
            print("üì§ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä VRM –∫–ª–∏–µ–Ω—Ç–∞")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
            test_commands = [
                {
                    'type': 'status',
                    'status': 'thinking'
                },
                {
                    'type': 'emotion',
                    'emotion': 'happy',
                    'intensity': 1.0,
                    'duration': 2000
                },
                {
                    'type': 'animation',
                    'animation': 'talking',
                    'duration': 3000
                },
                {
                    'type': 'text',
                    'text': '–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞.',
                    'duration': 5000
                },
                {
                    'type': 'speech',
                    'isSpeaking': True,
                    'text': '–¢–µ—Å—Ç–∏—Ä—É—é —Ä–µ—á—å...'
                },
                {
                    'type': 'speech',
                    'isSpeaking': False,
                    'text': ''
                },
                {
                    'type': 'status',
                    'status': 'idle'
                }
            ]
            
            for i, command in enumerate(test_commands):
                print(f"\nüß™ –¢–µ—Å—Ç {i+1}/{len(test_commands)}: {command['type']}")
                await websocket.send(json.dumps(command))
                
                # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –º–µ–∂–¥—É –∫–æ–º–∞–Ω–¥–∞–º–∏
                await asyncio.sleep(2)
            
            print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã")
            
            # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤
            await asyncio.sleep(5)
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∑–∞–ø—É—â–µ–Ω –∏ WebSocket —Å–µ—Ä–≤–µ—Ä –∞–∫—Ç–∏–≤–µ–Ω")

async def test_overlay_commands():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –∫–æ–º–∞–Ω–¥ —á–µ—Ä–µ–∑ overlay —Å–µ—Ä–≤–µ—Ä"""
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ overlay_server
        import sys
        import os
        sys.path.append(os.path.join(os.path.dirname(__file__), 'assistant'))
        
        from overlay_server import (
            send_emotion_to_vrm,
            send_animation_to_vrm,
            send_status_to_vrm,
            send_speech_to_vrm,
            send_text_to_vrm
        )
        
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥ —á–µ—Ä–µ–∑ overlay —Å–µ—Ä–≤–µ—Ä...")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        await send_status_to_vrm("thinking")
        print("‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å—Ç–∞—Ç—É—Å 'thinking'")
        
        await asyncio.sleep(1)
        
        await send_emotion_to_vrm("happy", 1.0, 2000)
        print("‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —ç–º–æ—Ü–∏—è 'happy'")
        
        await asyncio.sleep(1)
        
        await send_animation_to_vrm("talking", 3000)
        print("‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–Ω–∏–º–∞—Ü–∏—è 'talking'")
        
        await asyncio.sleep(1)
        
        await send_text_to_vrm("–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç overlay —Å–µ—Ä–≤–µ—Ä–∞!", 5000)
        print("‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω —Ç–µ–∫—Å—Ç")
        
        await asyncio.sleep(1)
        
        await send_speech_to_vrm(True, "–¢–µ—Å—Ç–∏—Ä—É—é —Ä–µ—á—å...")
        print("‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å—Ç–∞—Ç—É—Å —Ä–µ—á–∏ '–Ω–∞—á–∞–ª–∞—Å—å'")
        
        await asyncio.sleep(2)
        
        await send_speech_to_vrm(False)
        print("‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å—Ç–∞—Ç—É—Å —Ä–µ—á–∏ '–∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å'")
        
        await asyncio.sleep(1)
        
        await send_status_to_vrm("idle")
        print("‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω —Å—Ç–∞—Ç—É—Å 'idle'")
        
        print("\n‚úÖ –í—Å–µ –∫–æ–º–∞–Ω–¥—ã overlay —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –ø–∞–ø–∫–µ –ø—Ä–æ–µ–∫—Ç–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

async def test_emotions_and_animations():
    # –¢–µ—Å—Ç —ç–º–æ—Ü–∏–π
    print("–¢–µ—Å—Ç: üòä (happy)")
    await send_emotion_to_vrm("happy", 1.0, 2000)
    await asyncio.sleep(2.5)

    print("–¢–µ—Å—Ç: üò¢ (sad)")
    await send_emotion_to_vrm("sad", 1.0, 2000)
    await asyncio.sleep(2.5)

    print("–¢–µ—Å—Ç: üò° (angry)")
    await send_emotion_to_vrm("angry", 1.0, 2000)
    await asyncio.sleep(2.5)

    print("–¢–µ—Å—Ç: üò± (surprised)")
    await send_emotion_to_vrm("surprised", 1.0, 2000)
    await asyncio.sleep(2.5)

    # –¢–µ—Å—Ç –¥–≤–∏–∂–µ–Ω–∏–π
    print("–¢–µ—Å—Ç: greeting")
    await send_animation_to_vrm("greeting", 2000)
    await asyncio.sleep(2.5)

    print("–¢–µ—Å—Ç: excitement")
    await send_animation_to_vrm("excitement", 2000)
    await asyncio.sleep(2.5)

    print("–¢–µ—Å—Ç: surprise")
    await send_animation_to_vrm("surprise", 2000)
    await asyncio.sleep(2.5)

    print("–¢–µ—Å—Ç: thinking")
    await send_animation_to_vrm("thinking", 2000)
    await asyncio.sleep(2.5)

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ VRM —Å –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–µ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    print("\nüì° –¢–µ—Å—Ç 1: –ü—Ä—è–º–æ–µ WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")
    await test_vrm_integration()
    
    print("\n" + "=" * 50)
    
    # –¢–µ—Å—Ç 2: –ö–æ–º–∞–Ω–¥—ã —á–µ—Ä–µ–∑ overlay —Å–µ—Ä–≤–µ—Ä
    print("\nüéÆ –¢–µ—Å—Ç 2: –ö–æ–º–∞–Ω–¥—ã —á–µ—Ä–µ–∑ overlay —Å–µ—Ä–≤–µ—Ä")
    await test_overlay_commands()
    
    print("\n" + "=" * 50)
    
    # –¢–µ—Å—Ç 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–º–æ—Ü–∏–π –∏ –∞–Ω–∏–º–∞—Ü–∏–π
    print("\nüé≠ –¢–µ—Å—Ç 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–º–æ—Ü–∏–π –∏ –∞–Ω–∏–º–∞—Ü–∏–π")
    await test_emotions_and_animations()
    
    print("\n" + "=" * 50)
    print("üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")

if __name__ == "__main__":
    asyncio.run(main()) 